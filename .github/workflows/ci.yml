name: CI

on:
  push:
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Setup test environment
      run: |
        cp .env.test .env
    
    - name: Run unit tests
      run: |
        pytest tests/ -v -m "unit" --cov=src --cov-report=xml --cov-report=term-missing
    
    - name: Run integration tests (no network)
      run: |
        pytest tests/ -v -m "integration and not network" --cov=src --cov-append --cov-report=xml --cov-report=term-missing
    
    - name: Run mock tests
      run: |
        pytest tests/ -v -m "mock" --cov=src --cov-append --cov-report=xml --cov-report=term-missing --cov-report=json
    
    - name: Update coverage badge
      if: matrix.python-version == '3.11' && github.ref == 'refs/heads/main'
      run: |
        # Extract coverage percentage from coverage.json
        COVERAGE=$(python -c "import json; data=json.load(open('coverage.json')); print(f'{data[\"totals\"][\"percent_covered\"]:.0f}')")
        echo "Coverage: ${COVERAGE}%"
        
        # Determine badge color based on coverage
        if [ "$COVERAGE" -ge 80 ]; then
          COLOR="brightgreen"
        elif [ "$COVERAGE" -ge 60 ]; then
          COLOR="yellow"
        else
          COLOR="red"
        fi
        
        # Update README badge
        sed -i "s/!\[Coverage\](https:\/\/img\.shields\.io\/badge\/coverage-[0-9]*%25-[a-z]*)/![Coverage](https:\/\/img.shields.io\/badge\/coverage-${COVERAGE}%25-${COLOR})/" README.md
    
    - name: Comment PR with coverage
      if: matrix.python-version == '3.11' && github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          
          // Read coverage data
          const coverage = JSON.parse(fs.readFileSync('coverage.json', 'utf8'));
          const totalCoverage = Math.round(coverage.totals.percent_covered);
          
          // Determine emoji and status based on coverage
          let emoji = 'ðŸ”´';
          let status = 'needs improvement';
          if (totalCoverage >= 80) {
            emoji = 'ðŸŸ¢';
            status = 'excellent';
          } else if (totalCoverage >= 60) {
            emoji = 'ðŸŸ¡';
            status = 'good';
          }
          
          // Get detailed coverage by file
          const fileDetails = Object.entries(coverage.files)
            .map(([file, data]) => ({
              file: file.replace('src/', ''),
              coverage: Math.round(data.summary.percent_covered)
            }))
            .sort((a, b) => a.coverage - b.coverage)
            .slice(0, 10); // Show worst 10 files
          
          const detailsTable = fileDetails
            .map(({file, coverage}) => `| ${file} | ${coverage}% |`)
            .join('\n');
          
          const comment = `## ${emoji} Test Coverage Report
          
          **Overall Coverage: ${totalCoverage}% (${status})**
          
          <details>
          <summary>ðŸ“Š Coverage by File (lowest coverage first)</summary>
          
          | File | Coverage |
          |------|----------|
          ${detailsTable}
          
          </details>
          
          > Coverage target: 80% for excellent, 60% for good
          `;
          
          github.rest.issues.createComment({
            issue_number: context.payload.pull_request.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });

    - name: Commit coverage badge update
      if: matrix.python-version == '3.11' && github.ref == 'refs/heads/main'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        if git diff --quiet README.md; then
          echo "No coverage badge changes to commit"
        else
          git add README.md
          git commit -m "Update coverage badge [skip ci]"
          git push
        fi
    
    # - name: Upload coverage reports to Codecov
    #   uses: codecov/codecov-action@v5
    #   with:
    #     token: ${{ secrets.CODECOV_TOKEN }}
    #     files: ./coverage.xml
    #     flags: unittests
    #     name: codecov-umbrella
    #     fail_ci_if_error: false

  test-slow:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run slow/network tests
      run: |
        pytest tests/ -v -m "slow or network" --tb=short
      continue-on-error: true  # Network tests may fail due to external dependencies

