services:
  # FastAPI Backend Service
  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER:-admin}:${POSTGRES_PASSWORD:-password}@db:5432/${POSTGRES_DB:-visa_app}
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: ${REDIS_PASSWORD:-redis_password}
      PYTHONPATH: /app/src
      DOCKER_MODE: true
    volumes:
      - .:/app
    command: python -m uvicorn api.main:app --host 0.0.0.0 --port 8000 --reload
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Streamlit Frontend Service  
  web:
    build:
      context: .
      dockerfile: Dockerfile.web
    ports:
      - "8501:8501"
    depends_on:
      - api
    environment:
      API_BASE_URL: http://api:8000
      PYTHONPATH: /app/src
      DOCKER_MODE: true
    volumes:
      - .:/app
    command: streamlit run src/main.py --server.address 0.0.0.0 --server.port 8501
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8501/_stcore/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # PostgreSQL (primary database for all data)
  db:
    image: postgres:15-alpine
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-admin}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
      POSTGRES_DB: ${POSTGRES_DB:-visa_app}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-admin}"]
      interval: 30s
      retries: 3

  # Redis (optional - only for caching in production)
  redis:
    image: redis:7.0-alpine
    ports:
      - "6380:6379"
    command: redis-server --requirepass ${REDIS_PASSWORD:-redis_password}
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD:-redis_password}", "ping"]
      interval: 30s
      retries: 3

volumes:
  postgres_data:
  redis_data: