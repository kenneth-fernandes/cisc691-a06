apiVersion: apps/v1
kind: Deployment
metadata:
  name: api
  namespace: visa-app
spec:
  # Replicas managed by HPA (min: 1, max: 2)
  selector:
    matchLabels:
      app: api
  template:
    metadata:
      labels:
        app: api
    spec:
      containers:
      - name: api
        image: us-central1-docker.pkg.dev/agent-visa-467603/agentvisa/visa-app-api:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8000
        env:
        - name: POSTGRES_HOST
          value: postgres
        - name: POSTGRES_PORT
          value: "5432"
        - name: POSTGRES_DB
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: POSTGRES_DB
        - name: POSTGRES_USER
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: POSTGRES_USER
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: postgres-password
        # PostgreSQL connection URL constructed from individual variables
        - name: DATABASE_URL
          value: "postgresql://$(POSTGRES_USER):$(POSTGRES_PASSWORD)@$(POSTGRES_HOST):$(POSTGRES_PORT)/$(POSTGRES_DB)"
        - name: REDIS_HOST
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: REDIS_HOST
        - name: REDIS_PORT
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: REDIS_PORT
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: redis-password
        - name: PYTHONPATH
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: PYTHONPATH
        - name: DOCKER_MODE
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: DOCKER_MODE
        - name: GOOGLE_API_KEY
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: google-api-key
              optional: true
        - name: OPENAI_API_KEY
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: openai-api-key
              optional: true
        - name: ANTHROPIC_API_KEY
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: anthropic-api-key
              optional: true
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 45   # Allow more time for AI models to load
          periodSeconds: 15
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 15
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 12      # Allow 2 minutes for startup
        resources:
          requests:
            memory: "512Mi"   # Adequate for AI workload
            cpu: "200m"       # Baseline CPU
          limits:
            memory: "1Gi"     # Allow bursting for AI processing
            cpu: "500m"       # Allow CPU bursting